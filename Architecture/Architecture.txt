Сайт погоды. 

1. Клиентская часть
Web-браузер, тонкий клиент, обращается к Web-серверу для получения информации.
2. Web-сервер
Загружает статические web-страницы, клиент задает данные о погоде, которые хочет получить (территорию, срок - на 2 недели вперед).
Web-сервер обращается к Серверу приложений.
3. Сервер приложений
Запускает скрипт, который обрабатывает запрос от клиента и отправляет запрос на обратный proxy-сервер. Получает ответ от него, 
обрабатывает его, передает Web-серверу для загрузки клиенту.
4. Обратный proxy-сервер.
Принимает запрос от Сервера приложений, и перенаправляет его на один из web-сервисов, получает ответ, перенаправляет его Серверу приложений.
5. Web-сервис
Получает запрос от proxy-сервера, отправляет ответ обратно.  

Многоуровневая архитектура.

Производительность: клиент отправляет запрос, который в итоге поступает на один из Web-сервисов, при большой нагрузке на сеть proxy-сервер 
распределяет эту нагрузку на разные Web-сервисы. 
Безопасность: клиент не может поменять данные на конечном web-ресурсе (в базе данных), поскольку не знает конечно адреса этого Web-сервиса.
Надежность: можно предусмотреть несколько резервных web-сервисов для отказоустойчивости при выходе из строя одного из них, в этом случае 
обратный proxy-сервер будет направлять запрос на резервный работающий web-сервис.
